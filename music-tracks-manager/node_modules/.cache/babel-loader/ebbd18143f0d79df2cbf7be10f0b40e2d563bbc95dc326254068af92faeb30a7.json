{"ast":null,"code":"/*\r\n\r\ninterface Props {\r\n  selectedGenres: Genre[];\r\n  availableGenres: Genre[];\r\n  onAdd: (genre: Genre) => void;\r\n  onRemove: (genreId: number) => void;\r\n}\r\n\r\nexport function GenreTags({\r\n  selectedGenres,\r\n  availableGenres,\r\n  onAdd,\r\n  onRemove,\r\n}: Props) {\r\n  return (\r\n    <div>\r\n      <div className=\"mb-2 flex flex-wrap gap-2\">\r\n        {selectedGenres.map((genre) => (\r\n          <span\r\n            key={genre.id}\r\n            className=\"bg-blue-100 px-2 py-1 rounded-full text-sm\"\r\n          >\r\n            {genre.name}\r\n            <button\r\n              onClick={() => onRemove(genre.id)}\r\n              className=\"ml-1 text-red-500\"\r\n            >\r\n              x\r\n            </button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <select\r\n        onChange={(e) => {\r\n          const genre = availableGenres.find(\r\n            (g) => g.id === Number(e.target.value)\r\n          );\r\n          if (genre) onAdd(genre);\r\n        }}\r\n        className=\"p-1 border\"\r\n      >\r\n        <option value=\"\">+ Add genre</option>\r\n        {availableGenres\r\n          .filter((g) => !selectedGenres.find((s) => s.id === g.id))\r\n          .map((g) => (\r\n            <option key={g.id} value={g.id}>\r\n              {g.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n*/","map":{"version":3,"names":[],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/Genre.Tags.tsx"],"sourcesContent":["/*\r\n\r\ninterface Props {\r\n  selectedGenres: Genre[];\r\n  availableGenres: Genre[];\r\n  onAdd: (genre: Genre) => void;\r\n  onRemove: (genreId: number) => void;\r\n}\r\n\r\nexport function GenreTags({\r\n  selectedGenres,\r\n  availableGenres,\r\n  onAdd,\r\n  onRemove,\r\n}: Props) {\r\n  return (\r\n    <div>\r\n      <div className=\"mb-2 flex flex-wrap gap-2\">\r\n        {selectedGenres.map((genre) => (\r\n          <span\r\n            key={genre.id}\r\n            className=\"bg-blue-100 px-2 py-1 rounded-full text-sm\"\r\n          >\r\n            {genre.name}\r\n            <button\r\n              onClick={() => onRemove(genre.id)}\r\n              className=\"ml-1 text-red-500\"\r\n            >\r\n              x\r\n            </button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <select\r\n        onChange={(e) => {\r\n          const genre = availableGenres.find(\r\n            (g) => g.id === Number(e.target.value)\r\n          );\r\n          if (genre) onAdd(genre);\r\n        }}\r\n        className=\"p-1 border\"\r\n      >\r\n        <option value=\"\">+ Add genre</option>\r\n        {availableGenres\r\n          .filter((g) => !selectedGenres.find((s) => s.id === g.id))\r\n          .map((g) => (\r\n            <option key={g.id} value={g.id}>\r\n              {g.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}