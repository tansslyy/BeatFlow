{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\DeleteTrackFile\\\\DeleteTrackFile.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState } from \"react\";\n// import { Button } from \"@mui/material\";\n// import { deleteTrackFile } from \"../../api/track/trackApi\";\n\n// interface DeleteTRackFileProps {\n//   trackId: string;\n//   onFileRemoved: () => void;\n// }\n\n// export const DeleteTrakcFile: React.FC<DeleteTRackFileProps> = ({\n//   trackId,\n//   onFileRemoved,\n// }) => {\n//   const [loading, setLoading] = useState(false);\n//   const handleRemove = async () => {\n//     setLoading(true);\n//     try {\n//       await deleteTrackFile(trackId);\n//       onFileRemoved();\n//     } catch (err) {\n//       console.error(err);\n//       alert(\"Failed to delete file\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Button\n//       color=\"error\"\n//       variant=\"outlined\"\n//       onClick={handleRemove}\n//       disabled={loading}\n//       sx={{ mt: 1 }}\n//     >\n//       {loading ? \"Removing...\" : \"Remove File\"}\n//     </Button>\n//   );\n// };\n\nexport const deleteTrax = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"names":["deleteTrax","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/DeleteTrackFile/DeleteTrackFile.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Button } from \"@mui/material\";\r\n// import { deleteTrackFile } from \"../../api/track/trackApi\";\r\n\r\n// interface DeleteTRackFileProps {\r\n//   trackId: string;\r\n//   onFileRemoved: () => void;\r\n// }\r\n\r\n// export const DeleteTrakcFile: React.FC<DeleteTRackFileProps> = ({\r\n//   trackId,\r\n//   onFileRemoved,\r\n// }) => {\r\n//   const [loading, setLoading] = useState(false);\r\n//   const handleRemove = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       await deleteTrackFile(trackId);\r\n//       onFileRemoved();\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert(\"Failed to delete file\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Button\r\n//       color=\"error\"\r\n//       variant=\"outlined\"\r\n//       onClick={handleRemove}\r\n//       disabled={loading}\r\n//       sx={{ mt: 1 }}\r\n//     >\r\n//       {loading ? \"Removing...\" : \"Remove File\"}\r\n//     </Button>\r\n//   );\r\n// };\r\n\r\nexport const deleteTrax = () => {\r\n  return <div></div>;\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,UAAU,GAAGA,CAAA,KAAM;EAC9B,oBAAOC,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}