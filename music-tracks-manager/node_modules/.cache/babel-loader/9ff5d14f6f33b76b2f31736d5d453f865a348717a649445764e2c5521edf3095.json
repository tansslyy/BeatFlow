{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\TrackForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createTrack } from \"../api/track/trackApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrackForm = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [album, setAlbum] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [coverImage, setCoverImage] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title || !artist) {\n      alert(\"Title and Artist are required.\");\n      return;\n    }\n    if (coverImage && !/^https?:\\/\\/.*\\.(jpg|jpeg|png|gif)$/.test(coverImage)) {\n      alert(\"Invalid image URL\");\n      return;\n    }\n\n    // onSave({\n    //   title,\n    //   artist,\n    //   album,\n    //   coverImage,\n    //   genreIds: selectedGenres,\n    // });\n  };\n  const handleSave = async trackData => {\n    try {\n      const newTrack = await createTrack(trackData);\n      if (newTrack) {}\n    } catch (err) {\n      console.error(\"Помилка створення треку:\", err);\n      alert(\"Не вдалося створити трек\");\n    }\n  };\n\n  // const HandleAddGenre = (genre: Genres) => {\n  //   setSelectedGenres([...selectedGenres, genre]);\n  // };\n\n  // const handleRemoveGenre = (id: number) => {\n  //   setSelectedGenres(selectedGenres.filter((g) => g.id !== id));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Track Title\",\n      className: \"w-full border p-2\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: artist,\n      onChange: e => setArtist(e.target.value),\n      placeholder: \"Artist\",\n      className: \"w-full border p-2\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: album,\n      onChange: e => setAlbum(e.target.value),\n      placeholder: \"Album\",\n      className: \"w-full border p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: coverImage,\n      onChange: e => setCoverImage(e.target.value),\n      placeholder: \"Cover image URL\",\n      className: \"w-full border p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackForm, \"QZsLJoFTPxNYInj2ZJm+KFWwklk=\");\n_c = TrackForm;\nfunction onSave(arg0) {\n  throw new Error(\"Function not implemented.\");\n}\nvar _c;\n$RefreshReg$(_c, \"TrackForm\");","map":{"version":3,"names":["React","useState","createTrack","jsxDEV","_jsxDEV","TrackForm","_s","title","setTitle","artist","setArtist","album","setAlbum","genres","setGenres","coverImage","setCoverImage","handleSubmit","e","preventDefault","alert","test","handleSave","trackData","newTrack","err","console","error","onSubmit","className","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","onSave","arg0","Error","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/TrackForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { createTrack } from \"../api/track/trackApi\";\r\nimport { CreateTrack } from \"../api/track/models/CreateTrack\";\r\n\r\ninterface Props {\r\n  onSave: (track: CreateTrack) => void;\r\n}\r\n\r\nexport const TrackForm = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [album, setAlbum] = useState(\"\");\r\n  const [genres, setGenres] = useState<string[]>([]);\r\n  const [coverImage, setCoverImage] = useState(\"\");\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!title || !artist) {\r\n      alert(\"Title and Artist are required.\");\r\n      return;\r\n    }\r\n\r\n    if (coverImage && !/^https?:\\/\\/.*\\.(jpg|jpeg|png|gif)$/.test(coverImage)) {\r\n      alert(\"Invalid image URL\");\r\n      return;\r\n    }\r\n\r\n    // onSave({\r\n    //   title,\r\n    //   artist,\r\n    //   album,\r\n    //   coverImage,\r\n    //   genreIds: selectedGenres,\r\n    // });\r\n  };\r\n\r\n  const handleSave = async (trackData: CreateTrack) => {\r\n    try {\r\n      const newTrack = await createTrack(trackData);\r\n      if (newTrack) {\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Помилка створення треку:\", err);\r\n      alert(\"Не вдалося створити трек\");\r\n    }\r\n  };\r\n\r\n  // const HandleAddGenre = (genre: Genres) => {\r\n  //   setSelectedGenres([...selectedGenres, genre]);\r\n  // };\r\n\r\n  // const handleRemoveGenre = (id: number) => {\r\n  //   setSelectedGenres(selectedGenres.filter((g) => g.id !== id));\r\n  // };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Track Title\"\r\n        className=\"w-full border p-2\"\r\n        required\r\n      />\r\n      <input\r\n        value={artist}\r\n        onChange={(e) => setArtist(e.target.value)}\r\n        placeholder=\"Artist\"\r\n        className=\"w-full border p-2\"\r\n        required\r\n      />\r\n      <input\r\n        value={album}\r\n        onChange={(e) => setAlbum(e.target.value)}\r\n        placeholder=\"Album\"\r\n        className=\"w-full border p-2\"\r\n      />\r\n      <input\r\n        value={coverImage}\r\n        onChange={(e) => setCoverImage(e.target.value)}\r\n        placeholder=\"Cover image URL\"\r\n        className=\"w-full border p-2\"\r\n      />\r\n      {/* <GenreTags\r\n        selectedGenres={selectedGenres}\r\n        availableGenres={genres}\r\n        onAdd={HandleAddGenre}\r\n        onRemove={handleRemoveGenre}\r\n      /> */}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n      >\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nfunction onSave(arg0: {}) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}