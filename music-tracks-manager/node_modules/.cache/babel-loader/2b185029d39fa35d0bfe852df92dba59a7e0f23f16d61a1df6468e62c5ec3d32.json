{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useAudioPlayer.ts\nimport { useRef, useState } from \"react\";\nexport function useAudioPlayer() {\n  _s();\n  const audioRef = useRef(null);\n  const [currentTrackId, setCurrentTrackId] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const togglePlay = (id, url) => {\n    if (!audioRef.current) return;\n    if (currentTrackId && currentTrackId !== id) {\n      console.log(currentTrackId !== id);\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current.src = url;\n      audioRef.current.play();\n      setCurrentTrackId(id);\n      setIsPlaying(true);\n      return;\n    }\n\n    // якщо той самий трек\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(true);\n      setCurrentTrackId(id);\n    }\n  };\n  return {\n    audioRef,\n    currentTrackId,\n    isPlaying,\n    togglePlay\n  };\n}\n_s(useAudioPlayer, \"5uH99Qe6BMFjlnJAciNQD//V5kQ=\");","map":{"version":3,"names":["useRef","useState","useAudioPlayer","_s","audioRef","currentTrackId","setCurrentTrackId","isPlaying","setIsPlaying","togglePlay","id","url","current","console","log","pause","currentTime","src","play"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/hooks/useAudioPlayer.ts"],"sourcesContent":["// hooks/useAudioPlayer.ts\r\nimport { useRef, useState } from \"react\";\r\n\r\nexport function useAudioPlayer() {\r\n  const audioRef = useRef<HTMLAudioElement | null>(null);\r\n  const [currentTrackId, setCurrentTrackId] = useState<string | null>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const togglePlay = (id: string, url: string) => {\r\n\r\n    if (!audioRef.current) return;\r\n    \r\n    if (currentTrackId && currentTrackId !== id) {\r\n      console.log(currentTrackId !== id)\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current.src = url;\r\n      audioRef.current.play();\r\n      setCurrentTrackId(id);\r\n      setIsPlaying(true);\r\n      return;\r\n    }\r\n\r\n    // якщо той самий трек\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n      setCurrentTrackId(id);\r\n    }\r\n  };\r\n\r\n  return { audioRef, currentTrackId, isPlaying, togglePlay };\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAExC,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGJ,MAAM,CAA0B,IAAI,CAAC;EACtD,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,UAAU,GAAGA,CAACC,EAAU,EAAEC,GAAW,KAAK;IAE9C,IAAI,CAACP,QAAQ,CAACQ,OAAO,EAAE;IAEvB,IAAIP,cAAc,IAAIA,cAAc,KAAKK,EAAE,EAAE;MAC3CG,OAAO,CAACC,GAAG,CAACT,cAAc,KAAKK,EAAE,CAAC;MAClCN,QAAQ,CAACQ,OAAO,CAACG,KAAK,CAAC,CAAC;MACxBX,QAAQ,CAACQ,OAAO,CAACI,WAAW,GAAG,CAAC;MAChCZ,QAAQ,CAACQ,OAAO,CAACK,GAAG,GAAGN,GAAG;MAC1BP,QAAQ,CAACQ,OAAO,CAACM,IAAI,CAAC,CAAC;MACvBZ,iBAAiB,CAACI,EAAE,CAAC;MACrBF,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;;IAEA;IACA,IAAID,SAAS,EAAE;MACbH,QAAQ,CAACQ,OAAO,CAACG,KAAK,CAAC,CAAC;MACxBP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLJ,QAAQ,CAACQ,OAAO,CAACM,IAAI,CAAC,CAAC;MACvBV,YAAY,CAAC,IAAI,CAAC;MAClBF,iBAAiB,CAACI,EAAE,CAAC;IACvB;EACF,CAAC;EAED,OAAO;IAAEN,QAAQ;IAAEC,cAAc;IAAEE,SAAS;IAAEE;EAAW,CAAC;AAC5D;AAACN,EAAA,CAhCeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}