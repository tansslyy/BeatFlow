{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\Genre.Tags.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GenreTags({\n  selectedGenres,\n  availableGenres,\n  onAdd,\n  onRemove\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 flex flex-wrap gap-2\",\n      children: selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-blue-100 px-2 py-1 rounded-full text-sm\",\n        children: [genre.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onRemove(genre.id),\n          className: \"ml-1 text-red-500\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, genre.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        const genre = availableGenres.find(g => g.id === Number(e.target.value));\n        if (genre) onAdd(genre);\n      },\n      className: \"p-1 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"+ Add genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), availableGenres.filter(g => !selectedGenres.find(s => s.id === g.id)).map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: g.id,\n        children: g.name\n      }, g.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = GenreTags;\nvar _c;\n$RefreshReg$(_c, \"GenreTags\");","map":{"version":3,"names":["GenreTags","selectedGenres","availableGenres","onAdd","onRemove","_jsxDEV","children","className","map","genre","name","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","find","g","Number","target","value","filter","s","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/Genre.Tags.tsx"],"sourcesContent":["import { Genre } from \"../types/track\";\r\n\r\ninterface Props {\r\n  selectedGenres: Genre[];\r\n  availableGenres: Genre[];\r\n  onAdd: (genre: Genre) => void;\r\n  onRemove: (genreId: number) => void;\r\n}\r\n\r\nexport function GenreTags({\r\n  selectedGenres,\r\n  availableGenres,\r\n  onAdd,\r\n  onRemove,\r\n}: Props) {\r\n  return (\r\n    <div>\r\n      <div className=\"mb-2 flex flex-wrap gap-2\">\r\n        {selectedGenres.map((genre) => (\r\n          <span\r\n            key={genre.id}\r\n            className=\"bg-blue-100 px-2 py-1 rounded-full text-sm\"\r\n          >\r\n            {genre.name}\r\n            <button\r\n              onClick={() => onRemove(genre.id)}\r\n              className=\"ml-1 text-red-500\"\r\n            >\r\n              x\r\n            </button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <select\r\n        onChange={(e) => {\r\n          const genre = availableGenres.find(\r\n            (g) => g.id === Number(e.target.value)\r\n          );\r\n          if (genre) onAdd(genre);\r\n        }}\r\n        className=\"p-1 border\"\r\n      >\r\n        <option value=\"\">+ Add genre</option>\r\n        {availableGenres\r\n          .filter((g) => !selectedGenres.find((s) => s.id === g.id))\r\n          .map((g) => (\r\n            <option key={g.id} value={g.id}>\r\n              {g.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AASA,OAAO,SAASA,SAASA,CAAC;EACxBC,cAAc;EACdC,eAAe;EACfC,KAAK;EACLC;AACK,CAAC,EAAE;EACR,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAKE,SAAS,EAAC,2BAA2B;MAAAD,QAAA,EACvCL,cAAc,CAACO,GAAG,CAAEC,KAAK,iBACxBJ,OAAA;QAEEE,SAAS,EAAC,4CAA4C;QAAAD,QAAA,GAErDG,KAAK,CAACC,IAAI,eACXL,OAAA;UACEM,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACK,KAAK,CAACG,EAAE,CAAE;UAClCL,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAC9B;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GATJP,KAAK,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUT,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNX,OAAA;MACEY,QAAQ,EAAGC,CAAC,IAAK;QACf,MAAMT,KAAK,GAAGP,eAAe,CAACiB,IAAI,CAC/BC,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKS,MAAM,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CACvC,CAAC;QACD,IAAId,KAAK,EAAEN,KAAK,CAACM,KAAK,CAAC;MACzB,CAAE;MACFF,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAEtBD,OAAA;QAAQkB,KAAK,EAAC,EAAE;QAAAjB,QAAA,EAAC;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACpCd,eAAe,CACbsB,MAAM,CAAEJ,CAAC,IAAK,CAACnB,cAAc,CAACkB,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACb,EAAE,KAAKQ,CAAC,CAACR,EAAE,CAAC,CAAC,CACzDJ,GAAG,CAAEY,CAAC,iBACLf,OAAA;QAAmBkB,KAAK,EAAEH,CAAC,CAACR,EAAG;QAAAN,QAAA,EAC5Bc,CAAC,CAACV;MAAI,GADIU,CAAC,CAACR,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACU,EAAA,GA5Ce1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}