{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\pages\\\\TrackPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchTrackbySlug } from \"../api/track/trackApi\";\nimport { Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrackPage = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [track, setTrack] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (slug) {\n        const result = await fetchTrackbySlug(slug);\n        setTrack(result);\n      }\n    };\n    fetchData();\n  }, [slug]);\n  if (!track) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading or track not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: track.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: track.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: track.album\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: track.genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: track.updatedAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: track.coverImage,\n      alt: track.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: track.audioFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2\n      },\n      children: track.createdAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackPage, \"a3bgfWnZP4J7gnnY/Yx9lHRIQ2w=\", false, function () {\n  return [useParams];\n});\n_c = TrackPage;\nvar _c;\n$RefreshReg$(_c, \"TrackPage\");","map":{"version":3,"names":["React","useParams","useEffect","useState","fetchTrackbySlug","Box","Typography","jsxDEV","_jsxDEV","TrackPage","_s","slug","track","setTrack","fetchData","result","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","artist","album","genres","updatedAt","src","coverImage","alt","controls","audioFile","sx","mt","createdAt","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/pages/TrackPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Track } from \"../api/track/models/Track\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchTrackbySlug } from \"../api/track/trackApi\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nexport const TrackPage = () => {\r\n  const { slug } = useParams<{ slug: string }>();\r\n  const [track, setTrack] = useState<Track | undefined>();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (slug) {\r\n        const result = await fetchTrackbySlug(slug);\r\n        setTrack(result);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [slug]);\r\n\r\n  if (!track) return <Typography>Loading or track not found</Typography>;\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h3\">{track.title}</Typography>\r\n      <Typography variant=\"h5\">{track.artist}</Typography>\r\n      <Typography variant=\"h5\">{track.album}</Typography>\r\n      <Typography variant=\"h5\">{track.genres}</Typography>\r\n      <Typography variant=\"h5\">{track.updatedAt}</Typography>\r\n      <img src={track.coverImage} alt={track.title} />\r\n      <audio controls src={track.audioFile}></audio>\r\n      <Typography sx={{ mt: 2 }}>{track.createdAt}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}