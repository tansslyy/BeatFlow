{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\TrackForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TrackForm({\n  onSave\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [album, setAlbum] = useState(\"\");\n  const [coverImageUrl, setCoverImageUrl] = useState(\"\");\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  // const { genres, loading } = useGenres();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title || !artist) {\n      alert(\"Title and Artist are required.\");\n      return;\n    }\n    if (coverImageUrl && !/^https?:\\/\\/.*\\.(jpg|jpeg|png|gif)$/.test(coverImageUrl)) {\n      alert(\"Invalid image URL\");\n      return;\n    }\n\n    //   onSave({\n    //     title,\n    //     artist,\n    //     album,\n    //     genres: selectedGenres,\n    //     coverImage: coverImageUrl,\n    //   });\n    // };\n\n    // const HandleAddGenre = (genre: Genres) => {\n    //   setSelectedGenres([...selectedGenres, genre]);\n    // };\n\n    // const handleRemoveGenre = (id: number) => {\n    //   setSelectedGenres(selectedGenres.filter((g) => g.id !== id));\n    // };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Track Title\",\n        className: \"w-full border p-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: artist,\n        onChange: e => setArtist(e.target.value),\n        placeholder: \"Artist\",\n        className: \"w-full border p-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: album,\n        onChange: e => setAlbum(e.target.value),\n        placeholder: \"Album\",\n        className: \"w-full border p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: coverImageUrl,\n        onChange: e => setCoverImageUrl(e.target.value),\n        placeholder: \"Cover image URL\",\n        className: \"w-full border p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(TrackForm, \"PSlwSg1QLpupMGwfLmP5EQvPK00=\");\n_c = TrackForm;\nvar _c;\n$RefreshReg$(_c, \"TrackForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrackForm","onSave","_s","title","setTitle","artist","setArtist","album","setAlbum","coverImageUrl","setCoverImageUrl","selectedGenres","setSelectedGenres","genres","setGenres","handleSubmit","e","preventDefault","alert","test","onSubmit","className","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/TrackForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface Props {\r\n  onSave: (track: string /*TrackCreateDto*/) => void;\r\n}\r\n\r\nexport function TrackForm({ onSave }: Props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [album, setAlbum] = useState(\"\");\r\n  const [coverImageUrl, setCoverImageUrl] = useState(\"\");\r\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  // const { genres, loading } = useGenres();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!title || !artist) {\r\n      alert(\"Title and Artist are required.\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      coverImageUrl &&\r\n      !/^https?:\\/\\/.*\\.(jpg|jpeg|png|gif)$/.test(coverImageUrl)\r\n    ) {\r\n      alert(\"Invalid image URL\");\r\n      return;\r\n    }\r\n\r\n    //   onSave({\r\n    //     title,\r\n    //     artist,\r\n    //     album,\r\n    //     genres: selectedGenres,\r\n    //     coverImage: coverImageUrl,\r\n    //   });\r\n    // };\r\n\r\n    // const HandleAddGenre = (genre: Genres) => {\r\n    //   setSelectedGenres([...selectedGenres, genre]);\r\n    // };\r\n\r\n    // const handleRemoveGenre = (id: number) => {\r\n    //   setSelectedGenres(selectedGenres.filter((g) => g.id !== id));\r\n    // };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Track Title\"\r\n          className=\"w-full border p-2\"\r\n          required\r\n        />\r\n        <input\r\n          value={artist}\r\n          onChange={(e) => setArtist(e.target.value)}\r\n          placeholder=\"Artist\"\r\n          className=\"w-full border p-2\"\r\n          required\r\n        />\r\n        <input\r\n          value={album}\r\n          onChange={(e) => setAlbum(e.target.value)}\r\n          placeholder=\"Album\"\r\n          className=\"w-full border p-2\"\r\n        />\r\n        <input\r\n          value={coverImageUrl}\r\n          onChange={(e) => setCoverImageUrl(e.target.value)}\r\n          placeholder=\"Cover image URL\"\r\n          className=\"w-full border p-2\"\r\n        />\r\n        {/* <GenreTags\r\n        selectedGenres={selectedGenres}\r\n        availableGenres={genres}\r\n        onAdd={HandleAddGenre}\r\n        onRemove={handleRemoveGenre}\r\n      /> */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,OAAO,SAASC,SAASA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAW,EAAE,CAAC;EAClE,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAExC;;EAEA,MAAMkB,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACd,KAAK,IAAI,CAACE,MAAM,EAAE;MACrBa,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,IACET,aAAa,IACb,CAAC,qCAAqC,CAACU,IAAI,CAACV,aAAa,CAAC,EAC1D;MACAS,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACF;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA,oBACEnB,OAAA;MAAMqB,QAAQ,EAAEL,YAAa;MAACM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjDvB,OAAA;QACEwB,KAAK,EAAEpB,KAAM;QACbqB,QAAQ,EAAGR,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,aAAa;QACzBL,SAAS,EAAC,mBAAmB;QAC7BM,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFhC,OAAA;QACEwB,KAAK,EAAElB,MAAO;QACdmB,QAAQ,EAAGR,CAAC,IAAKV,SAAS,CAACU,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;QAC3CG,WAAW,EAAC,QAAQ;QACpBL,SAAS,EAAC,mBAAmB;QAC7BM,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFhC,OAAA;QACEwB,KAAK,EAAEhB,KAAM;QACbiB,QAAQ,EAAGR,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,OAAO;QACnBL,SAAS,EAAC;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFhC,OAAA;QACEwB,KAAK,EAAEd,aAAc;QACrBe,QAAQ,EAAGR,CAAC,IAAKN,gBAAgB,CAACM,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;QAClDG,WAAW,EAAC,iBAAiB;QAC7BL,SAAS,EAAC;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAOFhC,OAAA;QACEiC,IAAI,EAAC,QAAQ;QACbX,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EACrD;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEX,CAAC;AACH;AAAC7B,EAAA,CArFeF,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}