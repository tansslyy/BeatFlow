{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\TrackForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TrackForm({\n  onSave\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [album, setAlbum] = useState(\"\");\n  const [coverImageUrl, setCoverImageUrl] = useState(\"\");\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const {\n    genres,\n    loading\n  } = useGenres();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title || !artist) {\n      alert(\"Title and Artist are required.\");\n      return;\n    }\n    if (coverImageUrl && !/^https?:\\/\\/.*\\.(jpg|jpeg|png|gif)$/.test(coverImageUrl)) {\n      alert(\"Invalid image URL\");\n      return;\n    }\n    onSave({\n      title,\n      artist,\n      album,\n      genres: selectedGenres,\n      coverImage: coverImageUrl\n    });\n  };\n  const HandleAddGenre = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n  };\n  const handleRemoveGenre = id => {\n    setSelectedGenres(selectedGenres.filter(g => g.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Track Title\",\n      className: \"w-full border p-2\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: artist,\n      onChange: e => setArtist(e.target.value),\n      placeholder: \"Artist\",\n      className: \"w-full border p-2\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: album,\n      onChange: e => setAlbum(e.target.value),\n      placeholder: \"Album\",\n      className: \"w-full border p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: coverImageUrl,\n      onChange: e => setCoverImageUrl(e.target.value),\n      placeholder: \"Cover image URL\",\n      className: \"w-full border p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenreTags, {\n      selectedGenres: selectedGenres,\n      availableGenres: genres,\n      onAdd: HandleAddGenre,\n      onRemove: handleRemoveGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TrackForm, \"S6c/kxSdDRrwGHEFmVo2TrBIBZI=\", true);\n_c = TrackForm;\nvar _c;\n$RefreshReg$(_c, \"TrackForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrackForm","onSave","_s","title","setTitle","artist","setArtist","album","setAlbum","coverImageUrl","setCoverImageUrl","selectedGenres","setSelectedGenres","genres","loading","useGenres","handleSubmit","e","preventDefault","alert","test","coverImage","HandleAddGenre","genre","handleRemoveGenre","id","filter","g","onSubmit","className","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","GenreTags","availableGenres","onAdd","onRemove","type","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/TrackForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface Props {\r\n  onSave: (track: TrackCreateDto) => void;\r\n}\r\n\r\nexport function TrackForm({ onSave }: Props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [album, setAlbum] = useState(\"\");\r\n  const [coverImageUrl, setCoverImageUrl] = useState(\"\");\r\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\r\n\r\n  const { genres, loading } = useGenres();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!title || !artist) {\r\n      alert(\"Title and Artist are required.\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      coverImageUrl &&\r\n      !/^https?:\\/\\/.*\\.(jpg|jpeg|png|gif)$/.test(coverImageUrl)\r\n    ) {\r\n      alert(\"Invalid image URL\");\r\n      return;\r\n    }\r\n\r\n    onSave({\r\n      title,\r\n      artist,\r\n      album,\r\n      genres: selectedGenres,\r\n      coverImage: coverImageUrl,\r\n    });\r\n  };\r\n\r\n  const HandleAddGenre = (genre: Genres) => {\r\n    setSelectedGenres([...selectedGenres, genre]);\r\n  };\r\n\r\n  const handleRemoveGenre = (id: number) => {\r\n    setSelectedGenres(selectedGenres.filter((g) => g.id !== id));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Track Title\"\r\n        className=\"w-full border p-2\"\r\n        required\r\n      />\r\n      <input\r\n        value={artist}\r\n        onChange={(e) => setArtist(e.target.value)}\r\n        placeholder=\"Artist\"\r\n        className=\"w-full border p-2\"\r\n        required\r\n      />\r\n      <input\r\n        value={album}\r\n        onChange={(e) => setAlbum(e.target.value)}\r\n        placeholder=\"Album\"\r\n        className=\"w-full border p-2\"\r\n      />\r\n      <input\r\n        value={coverImageUrl}\r\n        onChange={(e) => setCoverImageUrl(e.target.value)}\r\n        placeholder=\"Cover image URL\"\r\n        className=\"w-full border p-2\"\r\n      />\r\n      <GenreTags\r\n        selectedGenres={selectedGenres}\r\n        availableGenres={genres}\r\n        onAdd={HandleAddGenre}\r\n        onRemove={handleRemoveGenre}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n      >\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}