{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\CreateTrackModal.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useState } from \"react\";\nimport { createTrack } from \"../api/track/trackApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTrackModal = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [album, setAlbum] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [coverImage, setCoverImage] = useState(\"\");\n  const [newGenre, setNewGenre] = useState(\"\");\n  const handleAddGenre = () => {\n    const trimmedGenre = newGenre.trim();\n    if (newGenre.trim() && !genres.includes(trimmedGenre)) {\n      setGenres([...genres, trimmedGenre]);\n      setNewGenre(\"\");\n    }\n  };\n  const handleRemoveGenre = genreToRemove => {\n    setGenres(genres.filter(g => g !== genreToRemove));\n  };\n  const validateImageUrl = url => {\n    return /^https?:\\/\\/.*\\.(jpg|jpeg|png|gif|webp)$/i.test(url);\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setTitle(\"\");\n    setArtist(\"\");\n    setAlbum(\"\");\n    setGenres([]);\n    setCoverImage(\"\");\n    setNewGenre(\"\");\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!title.trim() || !artist.trim()) {\n      alert(\"Track title and artist are required\");\n      return;\n    }\n    if (coverImage && !validateImageUrl(coverImage)) {\n      alert(\"Invalid image link format\");\n      return;\n    }\n    const trackData = {\n      title,\n      artist,\n      album,\n      coverImage: coverImage,\n      genres\n    };\n    console.log(\"Saving track:\", trackData);\n    createTrack(trackData);\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Create a track\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          id: \"subscription-form\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            required: true,\n            margin: \"dense\",\n            id: \"name\",\n            name: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          form: \"subscription-form\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTrackModal, \"9qWdrt63NVjhoWkF6ozfAIn0nRA=\");\n_c = CreateTrackModal;\nvar _c;\n$RefreshReg$(_c, \"CreateTrackModal\");","map":{"version":3,"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useState","createTrack","jsxDEV","_jsxDEV","CreateTrackModal","_s","open","setOpen","title","setTitle","artist","setArtist","album","setAlbum","genres","setGenres","coverImage","setCoverImage","newGenre","setNewGenre","handleAddGenre","trimmedGenre","trim","includes","handleRemoveGenre","genreToRemove","filter","g","validateImageUrl","url","test","handleClickOpen","handleClose","handleSubmit","event","preventDefault","alert","trackData","console","log","Fragment","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onSubmit","id","autoFocus","required","margin","name","label","type","fullWidth","form","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/CreateTrackModal.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { useState } from \"react\";\r\nimport { url } from \"inspector\";\r\nimport { createTrack } from \"../api/track/trackApi\";\r\n\r\nexport const CreateTrackModal = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [album, setAlbum] = useState(\"\");\r\n  const [genres, setGenres] = useState<string[]>([]);\r\n  const [coverImage, setCoverImage] = useState(\"\");\r\n  const [newGenre, setNewGenre] = useState(\"\");\r\n\r\n  const handleAddGenre = () => {\r\n    const trimmedGenre = newGenre.trim();\r\n    if (newGenre.trim() && !genres.includes(trimmedGenre)) {\r\n      setGenres([...genres, trimmedGenre]);\r\n      setNewGenre(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveGenre = (genreToRemove: string) => {\r\n    setGenres(genres.filter((g) => g !== genreToRemove));\r\n  };\r\n\r\n  const validateImageUrl = (url: string) => {\r\n    return /^https?:\\/\\/.*\\.(jpg|jpeg|png|gif|webp)$/i.test(url);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setTitle(\"\");\r\n    setArtist(\"\");\r\n    setAlbum(\"\");\r\n    setGenres([]);\r\n    setCoverImage(\"\");\r\n    setNewGenre(\"\");\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (!title.trim() || !artist.trim()) {\r\n      alert(\"Track title and artist are required\");\r\n      return;\r\n    }\r\n\r\n    if (coverImage && !validateImageUrl(coverImage)) {\r\n      alert(\"Invalid image link format\");\r\n      return;\r\n    }\r\n\r\n    const trackData = {\r\n      title,\r\n      artist,\r\n      album,\r\n      coverImage: coverImage,\r\n      genres,\r\n    };\r\n\r\n    console.log(\"Saving track:\", trackData);\r\n    createTrack(trackData);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Create a track\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here.\r\n            We will send updates occasionally.\r\n          </DialogContentText>\r\n          <form onSubmit={handleSubmit} id=\"subscription-form\">\r\n            <TextField\r\n              autoFocus\r\n              required\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              type=\"email\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\" form=\"subscription-form\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}