{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useAudioPlayer.ts\nimport { useEffect, useRef, useState } from \"react\";\nexport function useAudioPlayer() {\n  _s();\n  const audioRef = useRef(null);\n  const [currentTrackId, setCurrentTrackId] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handleEnded = () => {\n      setIsPlaying(false);\n    };\n    audio.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audio.removeEventListener(\"ended\", handleEnded);\n    };\n  }, []);\n  const togglePlay = (id, url) => {\n    if (!audioRef.current) return;\n    if (currentTrackId !== id) {\n      console.log(currentTrackId !== id);\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current.src = url;\n      audioRef.current.play();\n      setCurrentTrackId(id);\n      setIsPlaying(true);\n      return;\n    }\n\n    // якщо той самий трек\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(true);\n      setCurrentTrackId(id);\n    }\n  };\n  return {\n    audioRef,\n    currentTrackId,\n    isPlaying,\n    togglePlay\n  };\n}\n_s(useAudioPlayer, \"cE4wG6RchG4VJ4lK6AQZBOpwmVs=\");","map":{"version":3,"names":["useEffect","useRef","useState","useAudioPlayer","_s","audioRef","currentTrackId","setCurrentTrackId","isPlaying","setIsPlaying","audio","current","handleEnded","addEventListener","removeEventListener","togglePlay","id","url","console","log","pause","currentTime","src","play"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/hooks/useAudioPlayer.ts"],"sourcesContent":["// hooks/useAudioPlayer.ts\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useAudioPlayer() {\r\n  const audioRef = useRef<HTMLAudioElement | null>(null);\r\n  const [currentTrackId, setCurrentTrackId] = useState<string | null>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    if(!audio) return;\r\n\r\n    const handleEnded = () => {\r\n      setIsPlaying(false)\r\n    }\r\n\r\n    audio.addEventListener(\"ended\", handleEnded)\r\n   \r\n    return() => {\r\n      audio.removeEventListener(\"ended\", handleEnded)\r\n    }\r\n  }, [])\r\n\r\n  const togglePlay = (id: string, url: string) => {\r\n\r\n    \r\n    if (!audioRef.current) return;\r\n    \r\n    if (currentTrackId !== id) {\r\n      console.log(currentTrackId !== id)\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current.src = url;\r\n      audioRef.current.play();\r\n      setCurrentTrackId(id);\r\n      setIsPlaying(true);\r\n      return;\r\n    }\r\n\r\n    // якщо той самий трек\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n      setCurrentTrackId(id);\r\n    }\r\n  };\r\n\r\n  return { audioRef, currentTrackId, isPlaying, togglePlay };\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGJ,MAAM,CAA0B,IAAI,CAAC;EACtD,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGL,QAAQ,CAACM,OAAO;IAC9B,IAAG,CAACD,KAAK,EAAE;IAEX,MAAME,WAAW,GAAGA,CAAA,KAAM;MACxBH,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,KAAK,CAACG,gBAAgB,CAAC,OAAO,EAAED,WAAW,CAAC;IAE5C,OAAM,MAAM;MACVF,KAAK,CAACI,mBAAmB,CAAC,OAAO,EAAEF,WAAW,CAAC;IACjD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGA,CAACC,EAAU,EAAEC,GAAW,KAAK;IAG9C,IAAI,CAACZ,QAAQ,CAACM,OAAO,EAAE;IAEvB,IAAIL,cAAc,KAAKU,EAAE,EAAE;MACzBE,OAAO,CAACC,GAAG,CAACb,cAAc,KAAKU,EAAE,CAAC;MAClCX,QAAQ,CAACM,OAAO,CAACS,KAAK,CAAC,CAAC;MACxBf,QAAQ,CAACM,OAAO,CAACU,WAAW,GAAG,CAAC;MAChChB,QAAQ,CAACM,OAAO,CAACW,GAAG,GAAGL,GAAG;MAC1BZ,QAAQ,CAACM,OAAO,CAACY,IAAI,CAAC,CAAC;MACvBhB,iBAAiB,CAACS,EAAE,CAAC;MACrBP,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;;IAEA;IACA,IAAID,SAAS,EAAE;MACbH,QAAQ,CAACM,OAAO,CAACS,KAAK,CAAC,CAAC;MACxBX,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLJ,QAAQ,CAACM,OAAO,CAACY,IAAI,CAAC,CAAC;MACvBd,YAAY,CAAC,IAAI,CAAC;MAClBF,iBAAiB,CAACS,EAAE,CAAC;IACvB;EACF,CAAC;EAED,OAAO;IAAEX,QAAQ;IAAEC,cAAc;IAAEE,SAAS;IAAEO;EAAW,CAAC;AAC5D;AAACX,EAAA,CAhDeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}