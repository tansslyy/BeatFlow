{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\UploadTrtackFile\\\\UploadTrackFile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Button } from \"@mui/material\";\nimport { uploadTrackFile } from \"../../api/track/trackApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UploadTrackFile = ({\n  trackId,\n  existingFileUrl,\n  onFileUploaded\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [fileUrl, setFileUrl] = useState(existingFileUrl || \"\");\n  const handleFileChange = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const allowedTypes = [\"audio/mpeg\", \"audio/wav\"];\n    if (!allowedTypes.includes(file.type)) {\n      alert(\"Only MP3 or WAV!\");\n      return;\n    }\n    if (file.size > 15 * 1024 * 1024) {\n      alert(\"This file is large. Maximum is 15MB\");\n      return;\n    }\n    setUploading(true);\n    try {\n      const response = await uploadTrackFile(trackId, file);\n      console.log(\"Upload response:\", response);\n      if (response !== null && response !== void 0 && response.audioFile) {\n        const url = `http://localhost:8000/api/files/${response.audioFile}`;\n        console.log(url);\n        setFileUrl(url);\n        onFileUploaded(url);\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to download file\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: !fileUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        disabled: uploading,\n        children: [uploading ? \"Uploading...\" : \"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: fileUrl,\n        style: {\n          width: \"100%\",\n          marginTop: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTrackFile, \"XKL81LlzQTcbflfTtgiGK+k/LKA=\");\n_c = UploadTrackFile;\nvar _c;\n$RefreshReg$(_c, \"UploadTrackFile\");","map":{"version":3,"names":["React","useState","Box","Button","uploadTrackFile","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadTrackFile","trackId","existingFileUrl","onFileUploaded","_s","uploading","setUploading","fileUrl","setFileUrl","handleFileChange","e","_e$target$files","file","target","files","allowedTypes","includes","type","alert","size","response","console","log","audioFile","url","err","error","sx","mt","children","variant","component","disabled","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","style","width","marginTop","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/UploadTrtackFile/UploadTrackFile.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Track } from \"../../api/track/models/Track\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { uploadTrackFile } from \"../../api/track/trackApi\";\r\n\r\ninterface UploadTrackFileProps {\r\n  trackId: string;\r\n  existingFileUrl: string;\r\n  onFileUploaded: (url: string) => void;\r\n}\r\n\r\nexport const UploadTrackFile: React.FC<UploadTrackFileProps> = ({\r\n  trackId,\r\n  existingFileUrl,\r\n  onFileUploaded,\r\n}) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(existingFileUrl || \"\");\r\n\r\n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const allowedTypes = [\"audio/mpeg\", \"audio/wav\"];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      alert(\"Only MP3 or WAV!\");\r\n      return;\r\n    }\r\n    if (file.size > 15 * 1024 * 1024) {\r\n      alert(\"This file is large. Maximum is 15MB\");\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    try {\r\n      const response: Track | undefined = await uploadTrackFile(trackId, file);\r\n      console.log(\"Upload response:\", response);\r\n\r\n      if (response?.audioFile) {\r\n        const url = `http://localhost:8000/api/files/${response.audioFile}`;\r\n        console.log(url);\r\n        setFileUrl(url);\r\n        onFileUploaded(url);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to download file\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      {!fileUrl ? (\r\n        <>\r\n          <Button variant=\"contained\" component=\"label\" disabled={uploading}>\r\n            {uploading ? \"Uploading...\" : \"Upload File\"}\r\n            <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <Box>\r\n          <audio\r\n            controls\r\n            src={fileUrl}\r\n            style={{ width: \"100%\", marginTop: 10 }}\r\n          />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}