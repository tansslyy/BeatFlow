{"ast":null,"code":"import axios from \"axios\";\nexport const fetchTracks = async model => {\n  try {\n    var _model$page, _model$limit;\n    const params = {\n      page: (_model$page = model.page) !== null && _model$page !== void 0 ? _model$page : 1,\n      limit: (_model$limit = model.limit) !== null && _model$limit !== void 0 ? _model$limit : 10\n    };\n    if (model.order) params.order = model.order;\n    if (model.sort) params.sort = model.sort;\n    if (model.search && model.search.trim() !== \"\") params.search = model.search;\n    if (model.genre && model.genre.trim() !== \"\") params.genre = model.genre;\n    if (model.artist && model.artist.trim() !== \"\") params.artist = model.artist;\n    const response = await axios.get(\"http://localhost:8000/api/tracks\", {\n      params\n    });\n    if (response.status == 200 && response.data && response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const createTrack = async trackData => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/tracks\", trackData);\n    if (response.status == 201 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const fetchTrackbySlug = async slug => {\n  try {\n    const response = await axios.get(`http://localhost:8000/api/tracks/${slug}`);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const editTrack = async trackData => {\n  try {\n    const response = await axios.put(`http://localhost:8000/api/tracks/${trackData.id}`, trackData);\n    if (response.status == 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const deleteTrack = async ({\n  id\n}) => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${id}`);\n    if (response.status === 204) {}\n  } catch (error) {\n    console.error(\"Failed to delete track:\", error);\n  }\n};\nexport const deleteMultipleTracks = async trackData => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/tracks/delete\", trackData);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const uploadTrackFile = async (trackId, file) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const response = await axios.post(`http://localhost:8000/api/tracks/${trackId}/upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    if (response.status == 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const deleteTrackFile = async trackId => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${trackId}/file`);\n    if (response.status === 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};","map":{"version":3,"names":["axios","fetchTracks","model","_model$page","_model$limit","params","page","limit","order","sort","search","trim","genre","artist","response","get","status","data","error","console","log","undefined","createTrack","trackData","post","fetchTrackbySlug","slug","editTrack","put","id","deleteTrack","delete","deleteMultipleTracks","uploadTrackFile","trackId","file","formData","FormData","append","headers","deleteTrackFile"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/api/track/trackApi.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { Track } from \"./models/Track\";\r\nimport { PageList } from \"../../types/PageList\";\r\nimport { CreateTrack, GetModel } from \"./models/CreateTrack\";\r\nimport { EditTrack } from \"./models/EditTrack\";\r\nimport { DeleteTrack } from \"./models/DeleteTrack\";\r\nimport { DeleteTracksRequest } from \"./models/DeleteTracksRequest\";\r\n\r\nexport const fetchTracks = async (model: GetModel): Promise<PageList<Track> | undefined> => {\r\n  try {\r\nconst params: any = {\r\n    page: model.page ?? 1,\r\n    limit: model.limit ?? 10,\r\n}\r\n\r\nif (model.order) params.order = model.order;\r\nif (model.sort) params.sort = model.sort;\r\nif (model.search && model.search.trim() !== \"\") params.search = model.search;\r\nif (model.genre && model.genre.trim() !== \"\") params.genre = model.genre;\r\nif (model.artist && model.artist.trim() !== \"\") params.artist = model.artist\r\n\r\n    const response = await axios.get<PageList<Track>>(\"http://localhost:8000/api/tracks\",  { params });\r\n    if (response.status == 200 && response.data && response){\r\n      return response.data;\r\n    }\r\n  }\r\n  catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const createTrack = async (trackData: CreateTrack): Promise<Track|undefined> => {\r\n  try{\r\n    const response = await axios.post<CreateTrack, AxiosResponse<Track>>(\"http://localhost:8000/api/tracks\", trackData);\r\n    if(response.status == 201 && response.data) {\r\n      return response.data;\r\n    }\r\n  }\r\n    catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const fetchTrackbySlug = async(slug:string): Promise<Track|undefined> => {\r\n  try{\r\n    const response = await axios.get<Track>(`http://localhost:8000/api/tracks/${slug}`);\r\n    if (response.status === 200 ) {\r\n      return response.data;\r\n    }\r\n  }\r\n  catch (error:any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const editTrack = async (trackData : EditTrack): Promise<Track|undefined> => {\r\n  try{\r\n    const response = await axios.put<EditTrack, AxiosResponse<Track>>(`http://localhost:8000/api/tracks/${trackData.id}`, trackData);\r\n    if(response.status == 200 && response.data) {\r\n      return response.data;\r\n    }\r\n  }\r\n   catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const deleteTrack = async({id}:DeleteTrack): Promise<void> => {\r\n  try{\r\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${id}`);\r\n    if(response.status === 204){\r\n    }\r\n  }\r\n   catch (error: any) {\r\n    console.error(\"Failed to delete track:\", error);\r\n  }\r\n};\r\n\r\nexport const deleteMultipleTracks = async(trackData: DeleteTracksRequest): Promise<void> => {\r\n  try{\r\n    const response = await axios.post(\"http://localhost:8000/api/tracks/delete\", trackData);\r\n    if(response.status === 200) {\r\n      return response.data\r\n    }\r\n  }\r\n   catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const uploadTrackFile = async(trackId: string, file: File): Promise<Track | undefined> => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file)\r\n    const response = await axios.post<Track>(`http://localhost:8000/api/tracks/${trackId}/upload`, formData, \r\n      {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n    }\r\n  );\r\n      if (response.status == 200 && response.data ){\r\n      return response.data;\r\n    }\r\n  }\r\n  catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n  \r\n};\r\n\r\nexport const deleteTrackFile = async(trackId: string): Promise<Track | undefined> => {\r\n  try {\r\n    const response = await axios.delete<Track>(`http://localhost:8000/api/tracks/${trackId}/file`);\r\n    if (response.status === 200 && response.data){\r\n      return response.data;\r\n    }\r\n  }\r\n  catch(error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}