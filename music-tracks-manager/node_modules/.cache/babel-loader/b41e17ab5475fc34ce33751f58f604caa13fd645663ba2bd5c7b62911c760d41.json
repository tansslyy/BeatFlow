{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\DeleteTrackFile\\\\DeleteTrackFile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { deleteTrackFile } from \"../../api/track/trackApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeleteTrakcFile = ({\n  trackId,\n  onFileRemoved\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const handleRemove = async () => {\n    setLoading(true);\n    try {\n      await deleteTrackFile(trackId);\n      onFileRemoved();\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete file\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    color: \"error\",\n    variant: \"outlined\",\n    onClick: handleRemove,\n    disabled: loading,\n    sx: {\n      mt: 1\n    },\n    children: loading ? \"Removing...\" : \"Remove File\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteTrakcFile, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = DeleteTrakcFile;\nvar _c;\n$RefreshReg$(_c, \"DeleteTrakcFile\");","map":{"version":3,"names":["React","useState","Button","deleteTrackFile","jsxDEV","_jsxDEV","DeleteTrakcFile","trackId","onFileRemoved","_s","loading","setLoading","handleRemove","err","console","error","alert","color","variant","onClick","disabled","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/DeleteTrackFile/DeleteTrackFile.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { deleteTrackFile } from \"../../api/track/trackApi\";\r\n\r\ninterface DeleteTRackFileProps {\r\n  trackId: string;\r\n  onFileRemoved: () => void;\r\n}\r\n\r\nexport const DeleteTrakcFile: React.FC<DeleteTRackFileProps> = ({\r\n  trackId,\r\n  onFileRemoved,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const handleRemove = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await deleteTrackFile(trackId);\r\n      onFileRemoved();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete file\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      color=\"error\"\r\n      variant=\"outlined\"\r\n      onClick={handleRemove}\r\n      disabled={loading}\r\n      sx={{ mt: 1 }}\r\n    >\r\n      {loading ? \"Removing...\" : \"Remove File\"}\r\n    </Button>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3D,OAAO,MAAMC,eAA+C,GAAGA,CAAC;EAC9DC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMR,eAAe,CAACI,OAAO,CAAC;MAC9BC,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA,CAACH,MAAM;IACLe,KAAK,EAAC,OAAO;IACbC,OAAO,EAAC,UAAU;IAClBC,OAAO,EAAEP,YAAa;IACtBQ,QAAQ,EAAEV,OAAQ;IAClBW,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,EAEbb,OAAO,GAAG,aAAa,GAAG;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEb,CAAC;AAAClB,EAAA,CA7BWH,eAA+C;AAAAsB,EAAA,GAA/CtB,eAA+C;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}