{"ast":null,"code":"import axios from \"axios\";\nexport const fetchTracks = async model => {\n  try {\n    var _model$page, _model$limit;\n    const params = {\n      page: (_model$page = model.page) !== null && _model$page !== void 0 ? _model$page : 1,\n      limit: (_model$limit = model.limit) !== null && _model$limit !== void 0 ? _model$limit : 10\n    };\n    if (model.order) params.order = model.order;\n    if (model.sort) params.sort = model.sort;\n    if (model.search && model.search.trim() !== \"\") params.search = model.search;\n    if (model.genre && model.genre.trim() !== \"\") params.genre = model.genre;\n    if (model.artist && model.artist.trim() !== \"\") params.artist = model.artist;\n    const response = await axios.get(\"http://localhost:8000/api/tracks\", {\n      params\n    });\n    if (response.status === 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    // помилка обробляється тихо\n  }\n  return undefined;\n};\nexport const createTrack = async trackData => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/tracks\", trackData);\n    if (response.status === 201 && response.data) {\n      return response.data;\n    }\n  } catch (error) {}\n  return undefined;\n};\nexport const fetchTrackbySlug = async slug => {\n  try {\n    const response = await axios.get(`http://localhost:8000/api/tracks/${slug}`);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {}\n  return undefined;\n};\nexport const editTrack = async trackData => {\n  try {\n    const response = await axios.put(`http://localhost:8000/api/tracks/${trackData.id}`, trackData);\n    if (response.status === 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {}\n  return undefined;\n};\nexport const deleteTrack = async ({\n  id\n}) => {\n  try {\n    await axios.delete(`http://localhost:8000/api/tracks/${id}`);\n  } catch (error) {}\n};\nexport const deleteMultipleTracks = async trackData => {\n  try {\n    await axios.post(\"http://localhost:8000/api/tracks/delete\", trackData);\n  } catch (error) {}\n};\nexport const uploadTrackFile = async (trackId, file) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const response = await axios.post(`http://localhost:8000/api/tracks/${trackId}/upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    if (response.status === 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {}\n  return undefined;\n};\nexport const deleteTrackFile = async trackId => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${trackId}/file`);\n    if (response.status === 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {}\n  return undefined;\n};","map":{"version":3,"names":["axios","fetchTracks","model","_model$page","_model$limit","params","page","limit","order","sort","search","trim","genre","artist","response","get","status","data","error","undefined","createTrack","trackData","post","fetchTrackbySlug","slug","editTrack","put","id","deleteTrack","delete","deleteMultipleTracks","uploadTrackFile","trackId","file","formData","FormData","append","headers","deleteTrackFile"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/api/track/trackApi.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { Track } from \"./models/Track\";\r\nimport { PageList } from \"../../types/PageList\";\r\nimport { CreateTrack, GetModel } from \"./models/CreateTrack\";\r\nimport { EditTrack } from \"./models/EditTrack\";\r\nimport { DeleteTrack } from \"./models/DeleteTrack\";\r\nimport { DeleteTracksRequest } from \"./models/DeleteTracksRequest\";\r\n\r\nexport const fetchTracks = async (model: GetModel): Promise<PageList<Track> | undefined> => {\r\n  try {\r\n    const params: any = {\r\n      page: model.page ?? 1,\r\n      limit: model.limit ?? 10,\r\n    };\r\n    if (model.order) params.order = model.order;\r\n    if (model.sort) params.sort = model.sort;\r\n    if (model.search && model.search.trim() !== \"\") params.search = model.search;\r\n    if (model.genre && model.genre.trim() !== \"\") params.genre = model.genre;\r\n    if (model.artist && model.artist.trim() !== \"\") params.artist = model.artist;\r\n\r\n    const response = await axios.get<PageList<Track>>(\"http://localhost:8000/api/tracks\", { params });\r\n    if (response.status === 200 && response.data) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    // помилка обробляється тихо\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const createTrack = async (trackData: CreateTrack): Promise<Track | undefined> => {\r\n  try {\r\n    const response = await axios.post<CreateTrack, AxiosResponse<Track>>(\r\n      \"http://localhost:8000/api/tracks\",\r\n      trackData\r\n    );\r\n    if (response.status === 201 && response.data) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {}\r\n  return undefined;\r\n};\r\n\r\nexport const fetchTrackbySlug = async (slug: string): Promise<Track | undefined> => {\r\n  try {\r\n    const response = await axios.get<Track>(`http://localhost:8000/api/tracks/${slug}`);\r\n    if (response.status === 200) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {}\r\n  return undefined;\r\n};\r\n\r\nexport const editTrack = async (trackData: EditTrack): Promise<Track | undefined> => {\r\n  try {\r\n    const response = await axios.put<EditTrack, AxiosResponse<Track>>(\r\n      `http://localhost:8000/api/tracks/${trackData.id}`,\r\n      trackData\r\n    );\r\n    if (response.status === 200 && response.data) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {}\r\n  return undefined;\r\n};\r\n\r\nexport const deleteTrack = async ({ id }: DeleteTrack): Promise<void> => {\r\n  try {\r\n    await axios.delete(`http://localhost:8000/api/tracks/${id}`);\r\n  } catch (error) {}\r\n};\r\n\r\nexport const deleteMultipleTracks = async (trackData: DeleteTracksRequest): Promise<void> => {\r\n  try {\r\n    await axios.post(\"http://localhost:8000/api/tracks/delete\", trackData);\r\n  } catch (error) {}\r\n};\r\n\r\nexport const uploadTrackFile = async (trackId: string, file: File): Promise<Track | undefined> => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const response = await axios.post<Track>(\r\n      `http://localhost:8000/api/tracks/${trackId}/upload`,\r\n      formData,\r\n      { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    );\r\n    if (response.status === 200 && response.data) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {}\r\n  return undefined;\r\n};\r\n\r\nexport const deleteTrackFile = async (trackId: string): Promise<Track | undefined> => {\r\n  try {\r\n    const response = await axios.delete<Track>(`http://localhost:8000/api/tracks/${trackId}/file`);\r\n    if (response.status === 200 && response.data) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {}\r\n  return undefined;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}