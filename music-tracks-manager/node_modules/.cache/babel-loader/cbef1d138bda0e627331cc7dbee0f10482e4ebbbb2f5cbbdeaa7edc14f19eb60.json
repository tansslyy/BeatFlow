{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nexport function useAudioPlayer(trackId) {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTrackId, setCurrentTrackId] = useState(null);\n  const play = id => {\n    if (!audioRef.current) return;\n    if (currentTrackId && currentTrackId !== id) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    audioRef.current.play();\n    setCurrentTrackId(id);\n    setIsPlaying(true);\n  };\n  const pause = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n  const togglePlay = id => {\n    if (!audioRef.current) return;\n    if (currentTrackId === id) {\n      if (isPlaying) {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      } else {\n        audioRef.current.play();\n        setIsPlaying(true);\n      }\n    } else {\n      // новий трек відрізняється — зупиняємо старий і запускаємо новий\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n      setCurrentTrackId(id);\n      setIsPlaying(true);\n    }\n  };\n  const skipPrevious = () => {\n    console.log(\"Previous track\");\n  };\n  const skipNext = () => {\n    console.log(\"Next track\");\n  };\n  return {\n    audioRef,\n    play,\n    pause,\n    isPlaying,\n    togglePlay,\n    skipNext,\n    skipPrevious\n  };\n}\n_s(useAudioPlayer, \"Ulj/xn49z8te932IWKT9oX9C6J0=\");","map":{"version":3,"names":["useRef","useState","useAudioPlayer","trackId","_s","audioRef","isPlaying","setIsPlaying","currentTrackId","setCurrentTrackId","play","id","current","pause","currentTime","togglePlay","skipPrevious","console","log","skipNext"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/hooks/useAudioPlayer.ts"],"sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nexport function useAudioPlayer(trackId: string) {\r\nconst audioRef = useRef<HTMLAudioElement | null> (null);\r\nconst [isPlaying, setIsPlaying] = useState(false);\r\nconst [currentTrackId, setCurrentTrackId] = useState<string | null>(null)\r\n\r\nconst play = (id: string) => {\r\n    if (!audioRef.current)  return; \r\n    if(currentTrackId && currentTrackId !== id ) {\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = 0\r\n    }\r\n\r\n    audioRef. current.play();\r\n    setCurrentTrackId(id);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const pause = () => {\r\n    if(audioRef.current) {\r\n      audioRef.current.pause()\r\n      setIsPlaying(false)\r\n    }\r\n  }\r\n\r\n  const togglePlay = (id: string) => {\r\n    if (!audioRef.current) return;\r\n\r\n    if (currentTrackId === id) {\r\n      if (isPlaying) {\r\n        audioRef.current.pause();\r\n        setIsPlaying(false);\r\n      } else {\r\n        audioRef.current.play();\r\n        setIsPlaying(true);\r\n      }\r\n    } else {\r\n      // новий трек відрізняється — зупиняємо старий і запускаємо новий\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current.play();\r\n      setCurrentTrackId(id);\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n\r\n  const skipPrevious = () => {\r\n    console.log(\"Previous track\")\r\n  }\r\n\r\n  const skipNext = () => {\r\n    console.log(\"Next track\")\r\n  }\r\n\r\nreturn {\r\n  audioRef,\r\n  play,\r\n  pause,\r\n  isPlaying,\r\n  togglePlay,\r\n  skipNext,\r\n  skipPrevious\r\n};\r\n\r\n}"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAExC,OAAO,SAASC,cAAcA,CAACC,OAAe,EAAE;EAAAC,EAAA;EAChD,MAAMC,QAAQ,GAAGL,MAAM,CAA2B,IAAI,CAAC;EACvD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAEzE,MAAMS,IAAI,GAAIC,EAAU,IAAK;IACzB,IAAI,CAACN,QAAQ,CAACO,OAAO,EAAG;IACxB,IAAGJ,cAAc,IAAIA,cAAc,KAAKG,EAAE,EAAG;MAC3CN,QAAQ,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBR,QAAQ,CAACO,OAAO,CAACE,WAAW,GAAG,CAAC;IAClC;IAEAT,QAAQ,CAAEO,OAAO,CAACF,IAAI,CAAC,CAAC;IACxBD,iBAAiB,CAACE,EAAE,CAAC;IACrBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMM,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAGR,QAAQ,CAACO,OAAO,EAAE;MACnBP,QAAQ,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMQ,UAAU,GAAIJ,EAAU,IAAK;IACjC,IAAI,CAACN,QAAQ,CAACO,OAAO,EAAE;IAEvB,IAAIJ,cAAc,KAAKG,EAAE,EAAE;MACzB,IAAIL,SAAS,EAAE;QACbD,QAAQ,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC;QACxBN,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACLF,QAAQ,CAACO,OAAO,CAACF,IAAI,CAAC,CAAC;QACvBH,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,MAAM;MACL;MACAF,QAAQ,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBR,QAAQ,CAACO,OAAO,CAACE,WAAW,GAAG,CAAC;MAChCT,QAAQ,CAACO,OAAO,CAACF,IAAI,CAAC,CAAC;MACvBD,iBAAiB,CAACE,EAAE,CAAC;MACrBJ,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAGD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B,CAAC;EAEH,OAAO;IACLb,QAAQ;IACRK,IAAI;IACJG,KAAK;IACLP,SAAS;IACTS,UAAU;IACVI,QAAQ;IACRH;EACF,CAAC;AAED;AAACZ,EAAA,CAhEeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}