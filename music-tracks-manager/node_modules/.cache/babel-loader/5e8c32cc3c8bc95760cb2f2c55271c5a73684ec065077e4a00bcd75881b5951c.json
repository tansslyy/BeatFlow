{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0422\\u0430\\u043D\\u044F\\\\test-case genesis\\\\music-tracks-manager\\\\src\\\\components\\\\PlayTrack.tsx\";\nimport React from \"react\";\nimport { Box, IconButton } from \"@mui/material\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayTrack = ({\n  track,\n  player\n}) => {\n  const {\n    audioRef,\n    isPlaying,\n    currentTrackId,\n    togglePlay\n  } = player;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      style: {\n        width: \"100%\",\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: track.audioFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \"Your browser does not support audio.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => togglePlay(track.id, track.audioFile),\n        children: currentTrackId === track.id && isPlaying ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n          sx: {\n            height: 38,\n            width: 38\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n          sx: {\n            height: 38,\n            width: 38\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayTrack;\nvar _c;\n$RefreshReg$(_c, \"PlayTrack\");","map":{"version":3,"names":["React","Box","IconButton","PlayArrowIcon","PauseIcon","jsxDEV","_jsxDEV","PlayTrack","track","player","audioRef","isPlaying","currentTrackId","togglePlay","sx","display","flexDirection","gap","children","ref","style","width","borderRadius","src","audioFile","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","onClick","id","height","_c","$RefreshReg$"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/components/PlayTrack.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box, IconButton } from \"@mui/material\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport { useAudioPlayer } from \"../hooks/useAudioPlayer\";\r\nimport { Track } from \"../api/track/models/Track\";\r\n\r\ninterface PlayTrackProps {\r\n  track: Track;\r\n  player: ReturnType<typeof useAudioPlayer>;\r\n}\r\n\r\nexport const PlayTrack: React.FC<PlayTrackProps> = ({ track, player }) => {\r\n  const { audioRef, isPlaying, currentTrackId, togglePlay } = player;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n      <audio ref={audioRef} style={{ width: \"100%\", borderRadius: 8 }}>\r\n        <source src={track.audioFile} />\r\n        Your browser does not support audio.\r\n      </audio>\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\r\n        <IconButton onClick={() => togglePlay(track.id, track.audioFile)}>\r\n          {currentTrackId === track.id && isPlaying ? (\r\n            <PauseIcon sx={{ height: 38, width: 38 }} />\r\n          ) : (\r\n            <PlayArrowIcon sx={{ height: 38, width: 38 }} />\r\n          )}\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAE/C,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlD,OAAO,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EACxE,MAAM;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,cAAc;IAAEC;EAAW,CAAC,GAAGJ,MAAM;EAElE,oBACEH,OAAA,CAACL,GAAG;IAACa,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,GAAG,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5DZ,OAAA;MAAOa,GAAG,EAAET,QAAS;MAACU,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAJ,QAAA,gBAC9DZ,OAAA;QAAQiB,GAAG,EAAEf,KAAK,CAACgB;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,wCAElC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRtB,OAAA,CAACL,GAAG;MAACa,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEc,UAAU,EAAE,QAAQ;QAAEZ,GAAG,EAAE;MAAE,CAAE;MAAAC,QAAA,eACzDZ,OAAA,CAACJ,UAAU;QAAC4B,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACL,KAAK,CAACuB,EAAE,EAAEvB,KAAK,CAACgB,SAAS,CAAE;QAAAN,QAAA,EAC9DN,cAAc,KAAKJ,KAAK,CAACuB,EAAE,IAAIpB,SAAS,gBACvCL,OAAA,CAACF,SAAS;UAACU,EAAE,EAAE;YAAEkB,MAAM,EAAE,EAAE;YAAEX,KAAK,EAAE;UAAG;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE5CtB,OAAA,CAACH,aAAa;UAACW,EAAE,EAAE;YAAEkB,MAAM,EAAE,EAAE;YAAEX,KAAK,EAAE;UAAG;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAChD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GApBW1B,SAAmC;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}