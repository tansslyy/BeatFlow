{"ast":null,"code":"import axios from \"axios\";\nexport const fetchTracks = async model => {\n  try {\n    const response = await axios.get(`http://localhost:8000/api/tracks`, {\n      params: model\n    });\n    console.log(response);\n    if (response.status == 200 && response.data && response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const createTrack = async trackData => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/tracks\", trackData);\n    if (response.status == 201 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const fetchTrackbySlug = async slug => {\n  try {\n    const response = await axios.get(`http://localhost:8000/api/tracks/${slug}`);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const editTrack = async trackData => {\n  try {\n    const response = await axios.put(`http://localhost:8000/api/tracks/${trackData.id}`, trackData);\n    if (response.status == 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const deleteTrack = async ({\n  id\n}) => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${id}`);\n    if (response.status === 204) {\n      console.log(\"Track deleted successfully\");\n    }\n  } catch (error) {\n    console.error(\"Failed to delete track:\", error);\n  }\n};\nexport const deleteMultipleTracks = async trackData => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/tracks/delete\", trackData);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const uploadTrackFile = async (trackId, file) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const response = await axios.post(`http://localhost:8000/api/tracks/${trackId}/upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    if (response.status == 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};\nexport const deleteTrackFile = async trackId => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${trackId}/file`);\n    if (response.status === 200 && response.data) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return undefined;\n};","map":{"version":3,"names":["axios","fetchTracks","model","response","get","params","console","log","status","data","error","undefined","createTrack","trackData","post","fetchTrackbySlug","slug","editTrack","put","id","deleteTrack","delete","deleteMultipleTracks","uploadTrackFile","trackId","file","formData","FormData","append","headers","deleteTrackFile"],"sources":["C:/Таня/test-case genesis/music-tracks-manager/src/api/track/trackApi.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { Track } from \"./models/Track\";\r\nimport { PageList } from \"../../types/PageList\";\r\nimport { CreateTrack, GetModel } from \"./models/CreateTrack\";\r\nimport { EditTrack } from \"./models/EditTrack\";\r\nimport { DeleteTrack } from \"./models/DeleteTrack\";\r\nimport { DeleteTracksRequest } from \"./models/DeleteTracksRequest\";\r\n\r\nexport const fetchTracks = async (model: GetModel): Promise<PageList<Track> | undefined> => {\r\n  try {\r\n    const response = await axios.get<PageList<Track>>(`http://localhost:8000/api/tracks`, {params:model});\r\n    console.log(response)\r\n    if (response.status == 200 && response.data && response){\r\n      return response.data;\r\n    }\r\n  }\r\n  catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const createTrack = async (trackData: CreateTrack): Promise<Track|undefined> => {\r\n  try{\r\n    const response = await axios.post<CreateTrack, AxiosResponse<Track>>(\"http://localhost:8000/api/tracks\", trackData);\r\n    if(response.status == 201 && response.data) {\r\n      return response.data;\r\n    }\r\n  }\r\n    catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const fetchTrackbySlug = async(slug:string): Promise<Track|undefined> => {\r\n  try{\r\n    const response = await axios.get<Track>(`http://localhost:8000/api/tracks/${slug}`);\r\n    if (response.status === 200 ) {\r\n      return response.data;\r\n    }\r\n  }\r\n  catch (error:any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const editTrack = async (trackData : EditTrack): Promise<Track|undefined> => {\r\n  try{\r\n    const response = await axios.put<EditTrack, AxiosResponse<Track>>(`http://localhost:8000/api/tracks/${trackData.id}`, trackData);\r\n    if(response.status == 200 && response.data) {\r\n      return response.data;\r\n    }\r\n  }\r\n   catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const deleteTrack = async({id}:DeleteTrack): Promise<void> => {\r\n  try{\r\n    const response = await axios.delete(`http://localhost:8000/api/tracks/${id}`);\r\n    if(response.status === 204){\r\n      console.log(\"Track deleted successfully\");\r\n    }\r\n  }\r\n   catch (error: any) {\r\n    console.error(\"Failed to delete track:\", error);\r\n  }\r\n};\r\n\r\nexport const deleteMultipleTracks = async(trackData: DeleteTracksRequest): Promise<void> => {\r\n  try{\r\n    const response = await axios.post(\"http://localhost:8000/api/tracks/delete\", trackData);\r\n    if(response.status === 200) {\r\n      return response.data\r\n    }\r\n  }\r\n   catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const uploadTrackFile = async(trackId: string, file: File): Promise<Track | undefined> => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file)\r\n    const response = await axios.post<Track>(`http://localhost:8000/api/tracks/${trackId}/upload`, formData, \r\n      {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n    }\r\n  );\r\n      if (response.status == 200 && response.data ){\r\n      return response.data;\r\n    }\r\n  }\r\n  catch (error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n  \r\n};\r\n\r\nexport const deleteTrackFile = async(trackId: string): Promise<Track | undefined> => {\r\n  try {\r\n    const response = await axios.delete<Track>(`http://localhost:8000/api/tracks/${trackId}/file`);\r\n    if (response.status === 200 && response.data){\r\n      return response.data;\r\n    }\r\n  }\r\n  catch(error: any) {\r\n    console.log(error);\r\n  }\r\n  return undefined;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}